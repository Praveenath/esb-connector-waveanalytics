<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~   WSO2 Inc. licenses this file to you under the Apache License,
  ~   Version 2.0 (the "License"); you may not use this file except
  ~   in compliance with the License.
  ~   You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing,
  ~  software distributed under the License is distributed on an
  ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~  KIND, either express or implied.  See the License for the
  ~  specific language governing permissions and limitations
  ~  under the License.
-->
<template xmlns="http://ws.apache.org/ns/synapse" name="getDatasetListResource">
    <parameter name="folderId"
               description="Filters the results to include only the contents of a specific folder. Can be the requesting user’s ID for items in the user’s private folder."/>
    <parameter name="hasCurrentOnly"
               description="Filters the list of datasets to include only those datasets that have a current version. The default is false."/>
    <parameter name="page" description="A generated token that indicates the view of datasets to be returned."/>
    <parameter name="pageSize"
               description="Number of items to be returned in a single page. Minimum is 1, maximum is 200, and default is 25."/>
    <parameter name="q"
               description="Search terms. Individual terms are separated by spaces. Wild cards aren’t supported."/>
    <parameter name="sort" description="Sort order of the results"/>
    <sequence>
        <header name="Accept-Encoding" action="remove" scope="transport"/>
        <property name="uri.var.folderId" expression="$func:folderId"/>
        <property name="uri.var.hasCurrentOnly" expression="$func:hasCurrentOnly"/>
        <property name="uri.var.page" expression="$func:page"/>
        <property name="uri.var.pageSize" expression="$func:pageSize"/>
        <property name="uri.var.q" expression="$func:q"/>
        <property name="uri.var.sort" expression="$func:sort"/>
        <script language="js">
            <![CDATA[
                //url param variables
                var folderId = mc.getProperty("folderId");
                var hasCurrentOnly = mc.getProperty("hasCurrentOnly");
                var page = mc.getProperty("page");
                var pageSize = mc.getProperty("pageSize");
                var q = mc.getProperty("q");
                var sort = mc.getProperty("sort");
                //url param processing start
                var urlParamString = '';
                if (folderId != "" && folderId != null) {
                    urlParamString += '&folderId=' + folderId;
                }
                if (hasCurrentOnly != "" && hasCurrentOnly != null) {
                    urlParamString += '&hasCurrentOnly=' + hasCurrentOnly;
                }
                if (pageSize != "" && pageSize != null) {
                    urlParamString += '&pageSize=' + pageSize;
                }
                if (q != "" && q != null) {
                    urlParamString += '&q=' + q;
                }
                if (sort != "" && sort != null) {
                    urlParamString += '&sort=' + sort;
                }
                if(urlParamString != '') {
                    urlParamString = '?' + urlParamString.toString().substring(1);
                }
                mc.setProperty('uri.var.urlParamString', urlParamString);
                //url param processing end
            ]]>
        </script>
        <filter source="$ctx:waveanalyticsBlocking" regex="true">
            <then>
                <call blocking="true">
                    <endpoint>
                        <http method="GET"
                              uri-template="{uri.var.sfwave.apiUrl}/wave/datasets?{+uri.var.urlParamString}"/>
                    </endpoint>
                </call>
            </then>
            <else>
                <call>
                    <endpoint>
                        <http method="GET"
                              uri-template="{uri.var.sfwave.apiUrl}/wave/datasets?{+uri.var.urlParamString}"/>
                    </endpoint>
                </call>
            </else>
        </filter>
        <header name="Cache-Control" scope="transport" action="remove"/>
        <header name="Content-Encoding" scope="transport" action="remove"/>
        <header name="Content-Length" scope="transport" action="remove"/>
        <header name="Content-Type" scope="transport" action="remove"/>
        <header name="Date" scope="transport" action="remove"/>
        <header name="Vary" scope="transport" action="remove"/>
    </sequence>
</template>
